from typing import Optional
from .llm_interface import LLMInterface
from .api_llm import ApiLLM
from .local_llm import LocalLLM

class LLMFactory:
    @staticmethod
    def create_llm(
        llm_type: str,
        api_key: Optional[str] = None,
        folder_id: Optional[str] = None,
        local_model_name: Optional[str] = "models/mistral-instruct"
    ) -> LLMInterface:
        """
        –°–æ–∑–¥–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä LLM.
        
        Args:
            llm_type: –¢–∏–ø LLM –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è ("yandex" –∏–ª–∏ "local").
            api_key: API –∫–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ YandexGPT (–µ—Å–ª–∏ llm_type="yandex").
            folder_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–∞–ª–æ–≥–∞ Yandex Cloud (–µ—Å–ª–∏ llm_type="yandex").
            local_model_name: –ò–º—è –∏–ª–∏ –ø—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏ (–µ—Å–ª–∏ llm_type="local").
            
        Returns:
            –≠–∫–∑–µ–º–ø–ª—è—Ä LLMInterface.
            
        Raises:
            ValueError: –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø LLM –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
        """
        if llm_type == "yandex":
            if not api_key or not folder_id:
                raise ValueError("–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è YandexGPT API –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å api_key –∏ folder_id")
            print(f"üè≠ –°–æ–∑–¥–∞–Ω–∏–µ Yandex LLM (ApiLLM) —Å folder_id: {folder_id[:5]}...")
            return ApiLLM(api_key=api_key, folder_id=folder_id)
        elif llm_type == "local":
            print(f"üè≠ –°–æ–∑–¥–∞–Ω–∏–µ Local LLM (LocalLLM) —Å –º–æ–¥–µ–ª—å—é: {local_model_name}")
            return LocalLLM(model_name=local_model_name)
        else:
            raise ValueError(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø LLM: {llm_type}. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã: 'yandex', 'local'") 